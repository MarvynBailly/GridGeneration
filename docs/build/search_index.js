var documenterSearchIndex = {"docs":
[{"location":"pages/ODEFormulation.html#Ordinary-Differential-Equation-for-metric-Conforming-Structured-Grid-Generator","page":"ODE Formulation","title":"Ordinary Differential Equation for metric-Conforming Structured Grid Generator","text":"","category":"section"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"The aim is to create a simple metric-conforming structured grid generator by dividing the entire domain Omega into sub-domains hatOmega_i known as blocks. Along the sides of the blocks, we solve a 1D grid-spacing problem through the calculus of variation whose solution gives a coordinate mapping for the distribution of points according to the metric tensor. An algebraic method known as Transfinite Interpolation is used to fill in each block by interpolating the distribution of points along the edges into 2D. ","category":"page"},{"location":"pages/ODEFormulation.html#General-Grid-Spacing-Problem","page":"ODE Formulation","title":"General Grid-Spacing Problem","text":"","category":"section"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"We define the metric","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"m_alpha(x_s x s) = sigma_alpha^2  M x_s^2 - 1","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"where M(x(s)) is the metric tensor field designed from the residual posterior estimate, x is the physical domain and s is the computational domain. We will use variable subscripts to notation derivatives left( x_s = fracdxds right). Next, we define our loss as ","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"L_textmisfit(x_s x s) = m_alpha^2","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"which we use to define the functional  ","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"mathcalLx(s) = int_Omega L(x(s) x_s(s) s) d s","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"From variations we know the general solution is the Euler-Lagrange equation","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"fracpartial Lpartial x- fracdd s fracpartial Lpartial x_s = 0","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"For this choice of kernel L_textmisfit, the solution in R^n is a second-order nonlinear PDE of the form","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"-sum_alpha=1^n 8 sigma_alpha^4 M_klfracpartial x_lpartial s_alpha M_ij fracpartial x_ipartial s_alpha fracpartial^2 x_jpartial s_alpha^2 - sum_alpha = 1^n 4 sigma_alpha^4 fracpartial x_lpartial s_alphafracpartial M_ijpartial x_p fracpartial x_ppartial s_alpha fracpartial x_jpartial s_alpha - sum_alpha=1^n m_alpha sigma_alpha^2left( 4 M_kj fracpartial^2 x_jpartial s_alpha^2 + 4 fracpartial M_kjpartial x_pfracpartial x_jpartial s_alpha  - 2 fracpartial M_ijpartial x_kfracpartial x_ipartial s_alpha  fracpartial x_jpartial s_alpha right) = 0 k in 1 2 dots n","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"where Einstein Notation is used for non-Greek subscripts. ","category":"page"},{"location":"pages/ODEFormulation.html#1D-Grid-Spacing","page":"ODE Formulation","title":"1D Grid-Spacing","text":"","category":"section"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"In R, the above PDE turns into a friendly nonlinear ODE.","category":"page"},{"location":"pages/ODEFormulation.html#Second-Order-ODE","page":"ODE Formulation","title":"Second Order ODE","text":"","category":"section"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"Simplifying the above equation with n=1 yields a second-order nonlinear ODE of the form ","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"boxed 8 sigma^4  M^2 x_s^2 x_ss  + 4 sigma^4  M M_x x_s^4 + 4sigma^2 m^2 M x_ss + 2 sigma^2 m M_x x_s^2  = 0 ","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"with dirichlet boundary conditions","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"beginequation*\n    x(0) = x_0 quad x(1) = x_1\nendequation*","category":"page"},{"location":"pages/ODEFormulation.html#First-Order-System-of-ODEs","page":"ODE Formulation","title":"First Order System of ODEs","text":"","category":"section"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"We can rewrite the second order ODE as a system of first order ODEs by letting u_1 = x and u_2 = x_s to find","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"boxedbegincases\nu_1 = u_2 = x\nu_2 =  x = - fracu_1^2 M_u_1 left( 3 sigma^2  M u_2^2  - 1 right)2M left( sigma^4  M^2 u_2^4  + 1 right)\nendcases","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"with dirichlet boundary conditions x(0) = x_0 and x(L) = x_1 with Omega = 0 L or","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"beginequation*\n    u_1(L) = x_1 u_1(0) = x_0 u_2(0) = u_2(L) = 0\nendequation*","category":"page"},{"location":"pages/ODEFormulation.html#Optimal-Grid-Spacing","page":"ODE Formulation","title":"Optimal Grid Spacing","text":"","category":"section"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"We also require that ","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"fracpartial Lpartial sigma = 0","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"which gives us the condition","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"boxedsigma = left( fracint_hatOmega M x^2 dsint_hatOmega (M x^2)^2 ds right)^12","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"where sigma = frac1n_textopt. ","category":"page"},{"location":"pages/ODEFormulation.html","page":"ODE Formulation","title":"ODE Formulation","text":"We aim to solve the boxed equation numerically to find the distribution of points along the boundary of the blocks.","category":"page"},{"location":"pages/ODENumericalMethods.html#ODE-Numerical-Methods","page":"ODE Numerical Methods","title":"ODE Numerical Methods","text":"","category":"section"},{"location":"pages/DistributionOfPoints.html#Distribution-of-Points","page":"Distribution of Points","title":"Distribution of Points","text":"","category":"section"},{"location":"index.html#GridGeneration.jl-Documentation","page":"Home","title":"GridGeneration.jl Documentation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Welcome to the documentation for GridGeneration.jl","category":"page"},{"location":"index.html#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Brief description of your package.","category":"page"}]
}
